version: '3.8'

volumes:
  postgres:
  solr:
  redis:
  minio:

networks:
  internal:

x-app: &app
  env_file:
    - .env
  build:
    context: .
    args:
      - UID=${UID}
      - GID=${GID}
      - http_proxy=${http_proxy}
      - https_proxy=${http_proxy}
  image: ghcr.io/next-l/enju_leaf:latest
  networks:
    internal:
  volumes:
    - ./:/enju
  depends_on:
    - postgres
    - solr
    - redis
    # - minio
  restart: always

services:
  web:
    <<: *app
    command: bash -c "rm -f tmp/pids/server.pid && rails s -b 0.0.0.0"
    environment:
      - WEBPACKER_DEV_SERVER_HOST=webpacker
    expose:
      - 3000

  workers:
    <<: *app
    environment:
      - QUEUE=*
    command: bundle exec rake resque:work

  webpacker:
    <<: *app
    environment:
      - NODE_ENV=development
      - WEBPACKER_DEV_SERVER_HOST=127.0.0.1
    profiles:
      - develop
    command: ./bin/webpack-dev-server
    ports:
      - 127.0.0.1:3035:3035

  solr:
    image: solr:8
    ports:
      - 127.0.0.1:8983:8983
    env_file:
      - .env
    networks:
      internal:
    volumes:
      - solr:/var/solr/data
      - ./solr:/mnt/solr
    restart: always
    command: bash -c "precreate-core enju_leaf_${RAILS_ENV} /mnt/solr/configsets/sunspot/conf/; precreate-core enju_leaf_test /mnt/solr/configsets/sunspot/conf/; exec solr -f"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8983/solr/enju_leaf_${RAILS_ENV}/admin/ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:13
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      internal:
    env_file:
      - .env
    ports:
      - 127.0.0.1:5432:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "POSTGRES_PASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -h localhost -d template1"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:6
    command: redis-server --appendonly yes
    networks:
      internal:
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  minio:
    image: quay.io/minio/minio:RELEASE.2022-10-29T06-21-33Z
    profiles:
      - develop
    volumes:
      - minio:/data
    entrypoint:
      /bin/sh -c "mkdir -p /data/${ENJU_LEAF_STORAGE_BUCKET} && minio server /data --console-address \":9001\""
    expose:
      - 9000
      - 9001
    env_file:
      - .env
    restart: always
    networks:
      internal:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  cantaloupe:
    image: uclalibrary/cantaloupe:5.0.5-2
    expose:
      - 8182
    restart: always
    environment:
      no_proxy: localhost,web
      SOURCE_STATIC: HttpSource
      HTTPSOURCE_BASICLOOKUPSTRATEGY_URL_PREFIX: http://web:3000/picture_files/
      HTTPSOURCE_BASICLOOKUPSTRATEGY_URL_SUFFIX: '.download?size=original'
      ENDPOINT_API_ENABLED: 'true'
      BASE_URI: ${CANTALOUPE_BASE_URI}
    networks:
      internal:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8182/health"]
      interval: 30s
      timeout: 20s
      retries: 3

  nginx:
    image: nginx:stable
    ports:
      - ${ENJU_LEAF_BIND_ADDRESS}:8080:80
      - ${ENJU_LEAF_BIND_ADDRESS}:8182:8182
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./public:/opt/enju_leaf/public
    restart: always
    networks:
      internal:
    depends_on:
      - web
      - cantaloupe
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
